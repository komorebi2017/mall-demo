<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 包扫描，扫描controller层的注解 -->
    <context:component-scan base-package="com.mall.controller" annotation-config="true" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!--自动反序列化时用到的配置类-->
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <!--supportedMediaTypes就是MappingJacksonHttpMessageConverter类里面要注入的内容
                    把要配置的属性注入到这个集合value里面，这个SpringMVC返回值就自动通过ResponseBody注解自动序列化成Json-->
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>



    <!-- 文件上传 -->
    <!--multipartResolver引用的的是CommonsMultipartResolver，有三个属性分别代表
        文件上传的最大Size
        文件上传过程中使用的内存块，单位都是字节
        编码-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760"/> <!-- 10m -->
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>


    <mvc:interceptors>
        <!--如果在interceptors里设置拦截器，就代表拦截所有的请求-->
        <!--<bean></bean>-->
        <mvc:interceptor>
            <!--manage/a.do     manage/*
                manage/b.do     manage/*
                manage/product/save.do      manage/**
                manage/order/detail.do      manage/**
                -->
            <mvc:mapping path="/manage/**"/>
            <bean class="com.mall.controller.common.interceptor.AuthorityInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


</beans>
